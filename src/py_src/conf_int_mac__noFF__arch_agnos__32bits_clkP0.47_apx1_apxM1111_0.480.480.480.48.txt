---- RUN DC

                           Design Compiler Graphical 
                                 DC Ultra (TM)
                                  DFTMAX (TM)
                              Power Compiler (TM)
                                 DesignWare (R)
                                 DC Expert (TM)
                               Design Vision (TM)
                               HDL Compiler (TM)
                               VHDL Compiler (TM)
                                  DFT Compiler
                               Design Compiler(R)

              Version L-2016.03-SP5-3 for linux64 - Jan 23, 2017 

                    Copyright (c) 1988 - 2017 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
            or distribution of this software is strictly prohibited.
Initializing...
#set WDIR /home/unga/sglee/Share/ac_hw_syn
proc make-reg_l {reg_na reg_lower_bound reg_up_bound} {
    set reg_l {}
    set num_l {}
    for {set a $reg_lower_bound} {$a < $reg_up_bound} {incr a} {
        lappend num_l $a
    }
    foreach el $num_l {
        #append concat_res reg_a_reg $el 
        lappend reg_l  "${reg_na}\[${el}\]"
        #reg_a_reg[${el}]
    }
    set reg_l_flattened [join $reg_l]
    return $reg_l_flattened
}
#----------------------------------------------------
#---- Parameters
#----------------------------------------------------
#---- N: the following should be commented out if the tcl file is invoked by 
#-----   a python function
#set DATA_PATH_WIDTH 32;
#set CLKGATED_BITWIDTH 4; #numebr of apx bits
#set clk_period 0
###--- F: apximation
#set apx_optimal 1
#set apx_optimal_mode(first) 1
#set apx_optimal_mode(second) 1
#set apx_optimal_mode(third)  1
#set apx_optimal_mode(fourth) 1
#set msb_1_max_delay .46;#.270 ideally
#set msb_2_max_delay .44 ;#.261 ideally
#set msb_3_max_delay .43 ;#.249 ideally
#set msb_4_max_delay .42 ;#.242 ideally
#----------------------------------------------------
set OP_BITWIDTH $DATA_PATH_WIDTH; #operator bitwidth
32
#--- F: printing the parameters into a file
set parameter_log [open "parameter_log.txt" w]
file13
puts $parameter_log "--- TCL'S PARAMETER INFO"
puts $parameter_log [concat "DATA_PATH_WIDTH:" $DATA_PATH_WIDTH]
#puts $parameter_log [concat "CLKGATED_BITWIDTH:" $CLKGATED_BITWIDTH] 
puts $parameter_log [concat "clk_period :" $clk_period] 
puts $parameter_log [concat "apx_optimal:" $apx_optimal] 
puts $parameter_log [concat "apx_optimal_mode(first):" $apx_optimal_mode(first)]
puts $parameter_log [concat "apx_optimal_mode(second):" $apx_optimal_mode(second)]
puts $parameter_log [concat "apx_optimal_mode(third):"  $apx_optimal_mode(third)]
puts $parameter_log [concat "apx_optimal_mode(fourth):" $apx_optimal_mode(fourth)]
puts $parameter_log [concat "msb_1_max_delay:" $msb_1_max_delay] 
puts $parameter_log [concat "msb_2_max_delay:" $msb_2_max_delay] 
puts $parameter_log [concat "msb_3_max_delay:" $msb_3_max_delay] 
puts $parameter_log [concat "msb_4_max_delay:" $msb_4_max_delay] 
close $parameter_log
#----------------------------------------------------
#----------------------------------------------------
#--- variables
#----------------------------------------------------
set WDIR "/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/build/syn"
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/build/syn
#~/behzad_local/verilog_files/synthesis
set RTLDIR  "/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src"
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src
#~/behzad_local/verilog_files/apx_operators/int_ops_apx
set REPORTS_DIR ${WDIR}/reports
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/build/syn/reports
set DESIGN_NAME conf_int_mac__noFF__arch_agnos
conf_int_mac__noFF__arch_agnos
#set DESIGN_NAME unconfig_int_add
#set DESIGN_NAME unconfig_int_add
set RESULTS_DIR ${WDIR}/results
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/build/syn/results
set DCRM_FINAL_TIMING_REPORT timing.rpt
timing.rpt
set DCRM_FINAL_AREA_REPORT area.rpt
area.rpt
set DCRM_FINAL_POWER_REPORT power.rpt
power.rpt
set search_path "${RTLDIR}"
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src
set my_toplevel ${DESIGN_NAME}
conf_int_mac__noFF__arch_agnos
#--- libraries
set lib_dir_1 "/usr/local/packages/synopsys_32.28_07292013/SAED32_EDK/lib"
/usr/local/packages/synopsys_32.28_07292013/SAED32_EDK/lib
set lib_dir_2 "/home/polaris/behzad/behzad_local/verilog_files/libraries"
/home/polaris/behzad/behzad_local/verilog_files/libraries
set lib_dir_3 "/home/polaris/behzad/behzad_local/verilog_files/libraries/germany_NanGate/db"
/home/polaris/behzad/behzad_local/verilog_files/libraries/germany_NanGate/db
#set lib_dir_3 "/home/polaris/behzad/behzad_local/verilog_files/libraries/FreePDK45/osu_soc/lib/files"
#--- NOTE: I had to include *_rvt as well, cause ow the compiler was erroring out
#set search_path [concat  $search_path $lib_dir_1/stdcell_rvt/db_nldm $lib_dir_1/stdcell_lvt/db_nldm $lib_dir_2/germany_NanGate/db $lib_dir_3]
set search_path [concat  $search_path $lib_dir_3]
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src /home/polaris/behzad/behzad_local/verilog_files/libraries/germany_NanGate/db
#--- design dir
set design_dir_addr "/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src"
/home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src
#--- library
#set std_library "saed32rvt_tt1p05v25c.db"
#set std_library "saed32lvt_tt1p05v25c.db"; #the best(amon lvts)
#set std_library "saed32lvt_tt1p05vn40c.db"; #did the same as 25c 
#set std_library "saed32lvt_tt0p85v25c.db"; #did worst that 1.05
#set  std_library  "saed32lvt_ulvl_ff1p16v25c_i0p85v.db" 
set  std_library  "noAging.db" 
noAging.db
#set std_library "gscl45nm.db"; #PDK45 themselves
set target_library $std_library; #$std_library_2" 
noAging.db
set link_library $std_library; #$std_library_2"
noAging.db
set compile_delete_unloaded_sequential_cells false
false
set compile_seqmap_propagate_constants false
false
set compile_enable_register_merging false
false
set compile_seqmap_enable_output_inversion false
false
set AC_NAME $DESIGN_NAME
conf_int_mac__noFF__arch_agnos
#--- specifying libraries 
define_design_lib WORK -path ./WORK
1
set verilogout_show_unconnected_pins "true"
true
#set enable_keep_signal_dt_net true
#set enable_keep_signal true
#--- read the design 
#analyze -format verilog [list  ${design_dir_addr}/ripple_carry_adder.v ${design_dir_addr}/unconfig_int_add.v ${design_dir_addr}/acc_int_add.v ]
#analyze -format verilog [list  ${design_dir_addr}/unconfig_int_add.v]
analyze -format verilog [list  ${design_dir_addr}/${DESIGN_NAME}.v]
Running PRESTO HDLC
Compiling source file /home/polaris/behzad/behzad_local/verilog_files/apx_operators/int_ops_apx/src/v_src/conf_int_mac__noFF__arch_agnos.v
Presto compilation completed successfully.
Loading db file '/home/polaris/behzad/behzad_local/verilog_files/libraries/germany_NanGate/db/noAging.db'
1
elaborate $my_toplevel -parameters $OP_BITWIDTH,$DATA_PATH_WIDTH
Loading db file '/usr/local/packages/synopsys_2016/syn/libraries/syn/gtech.db'
Loading db file '/usr/local/packages/synopsys_2016/syn/libraries/syn/standard.sldb'
  Loading link library 'typical'
  Loading link library 'gtech'
Running PRESTO HDLC
Presto compilation completed successfully.
Elaborated 1 design.
Current design is now 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32'.
1
#${design_dir_addr}/ripple_carry_adder.v] ;# this one is for a simple unstructured example
#elaborate $my_toplevel 
check_design
 
****************************************
check_design summary:
Version:     L-2016.03-SP5-3
Date:        Mon Feb 27 14:30:07 2017
****************************************

                   Name                                            Total
--------------------------------------------------------------------------------
Inputs/Outputs                                                      2
    Unconnected ports (LINT-28)                                     2
--------------------------------------------------------------------------------

Warning: In design 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32', port 'clk' is not connected to any nets. (LINT-28)
Warning: In design 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32', port 'rst' is not connected to any nets. (LINT-28)
1
#set endpoints [add_to_collection [all_outputs] [all_registers -data_pins]]
#--- linking to libraries
link

  Linking design 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32'
  Using the following designs and libraries:
  --------------------------------------------------------------------------
  typical (library)           /home/polaris/behzad/behzad_local/verilog_files/libraries/germany_NanGate/db/noAging.db

1
#uniquify
#saif_map -start 
#--- set the optimization constraints 
create_clock -name clk -period $clk_period [get_ports clk]
1
set_ideal_network -no_propagate [get_ports clk]
1
set_input_delay -max 0 -clock clk [get_ports b*]     
1
set_input_delay -max 0 -clock clk [get_ports a*]     
1
set_dont_touch_network [get_clocks clk]
1
#set_dont_touch_network [get_net o_temp_1]
#set_dont_touch_network [get_ports a[0]]
#set_dont_touch_network [get_ports a[1]]
#set_dont_touch_network [get_ports b[0]]
#set_dont_touch_network [get_ports b[1]]
#set_dont_touch_network [get_port c*]
#
#--- use the following rule if you don't want to use the clock and 
#------ you are only having combination logic for the addition
#set_max_delay  -to [all_outputs]
#--- design rule constraints 
#set_max_area 0
#---- don't need this, if we add it the combination logic case would be different
#-------- comparing to the german people
#foreach_in_collection endpt $endpoints { set pin [get_object_name $endpt] 
#    group_path -name $pin -to $pin
#}
set all_reg_a_l [make-reg_l "a" 0 $DATA_PATH_WIDTH]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set all_reg_b_l [make-reg_l "b" 0 $DATA_PATH_WIDTH]
b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set all_reg_c_l [make-reg_l "c" 0 $DATA_PATH_WIDTH]
c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
set all_reg_d_l [make-reg_l "d" 0 $DATA_PATH_WIDTH]
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
set all_reg_a_b_joined [concat $all_reg_a_l $all_reg_b_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set all_reg_a_b_c_joined [concat $all_reg_a_b_joined]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set lsb_bits 4
4
#$CLKGATED_BITWIDTH
set msb_bits [expr $DATA_PATH_WIDTH - $lsb_bits]
28
#----------------------------------------------------
#----------------------------------------------------
#----------------------------------------------------
#--- lab_1 ,[lsb: 0]
set lsb_1_reg_a_l [make-reg_l "a" 0 $lsb_bits]
a[0] a[1] a[2] a[3]
set lsb_1_reg_b_l [make-reg_l "b" 0 $lsb_bits]
b[0] b[1] b[2] b[3]
set lsb_1_reg_c_l [make-reg_l "c" 0 $lsb_bits]
c[0] c[1] c[2] c[3]
set lsb_1_reg_d_l [make-reg_l "d" 0 $lsb_bits]
d[0] d[1] d[2] d[3]
set lsb_1_reg_a_b_joined [concat $lsb_1_reg_a_l $lsb_1_reg_b_l]
a[0] a[1] a[2] a[3] b[0] b[1] b[2] b[3]
set lsb_1_reg_a_b_c_joined [concat $lsb_1_reg_a_b_joined $lsb_1_reg_c_l]
a[0] a[1] a[2] a[3] b[0] b[1] b[2] b[3] c[0] c[1] c[2] c[3]
set msb_1_reg_a_l [make-reg_l "a" $lsb_bits $DATA_PATH_WIDTH]
a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set msb_1_reg_b_l [make-reg_l "b" $lsb_bits $DATA_PATH_WIDTH]
b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_1_reg_c_l [make-reg_l "c" $lsb_bits $DATA_PATH_WIDTH]
c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
set msb_1_reg_d_l [make-reg_l "d" $lsb_bits $DATA_PATH_WIDTH]
d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
set msb_1_reg_a_b_joined [concat $msb_1_reg_a_l $msb_1_reg_b_l]
a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_1_reg_a_b_c_joined [concat $msb_1_reg_a_b_joined $msb_1_reg_c_l]
a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
#-----  -----    -----     -----     -----     -----
set lsb_2_reg_a_l [make-reg_l "a" 0 [expr $lsb_bits + 4]]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7]
set lsb_2_reg_b_l [make-reg_l "b" 0 [expr $lsb_bits + 4]]
b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7]
set lsb_2_reg_c_l [make-reg_l "c" 0 [expr $lsb_bits + 4]]
c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7]
set lsb_2_reg_d_l [make-reg_l "d" 0 [expr $lsb_bits + 4]]
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7]
set lsb_2_reg_a_b_joined [concat $lsb_2_reg_a_l $lsb_2_reg_b_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7]
set lsb_2_reg_a_b_c_joined [concat $lsb_2_reg_a_b_joined $lsb_2_reg_c_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7]
set msb_2_reg_a_l [make-reg_l "a" [expr $lsb_bits + 4] $DATA_PATH_WIDTH]
a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set msb_2_reg_b_l [make-reg_l "b" [expr $lsb_bits + 4] $DATA_PATH_WIDTH]
b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_2_reg_c_l [make-reg_l "c" [expr $lsb_bits + 4] $DATA_PATH_WIDTH]
c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
set msb_2_reg_d_l [make-reg_l "d" [expr $lsb_bits + 4] $DATA_PATH_WIDTH]
d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
set msb_2_reg_a_b_joined [concat $msb_2_reg_a_l $msb_2_reg_b_l]
a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_2_reg_a_b_c_joined [concat $msb_2_reg_a_b_joined $msb_2_reg_c_l]
a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
#-----  -----    -----     -----     -----     -----
set lsb_3_reg_a_l [make-reg_l "a" 0 [expr $lsb_bits + 8]]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11]
set lsb_3_reg_b_l [make-reg_l "b" 0 [expr $lsb_bits + 8]]
b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11]
set lsb_3_reg_c_l [make-reg_l "c" 0 [expr $lsb_bits + 8]]
c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11]
set lsb_3_reg_d_l [make-reg_l "d" 0 [expr $lsb_bits + 8]]
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11]
set lsb_3_reg_a_b_joined [concat $lsb_3_reg_a_l $lsb_3_reg_b_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11]
set lsb_3_reg_a_b_c_joined [concat $lsb_3_reg_a_b_joined $lsb_3_reg_c_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11]
set msb_3_reg_a_l [make-reg_l "a" [expr $lsb_bits + 8]  $DATA_PATH_WIDTH]
a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set msb_3_reg_b_l [make-reg_l "b" [expr $lsb_bits + 8] $DATA_PATH_WIDTH]
b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_3_reg_c_l [make-reg_l "c" [expr $lsb_bits + 8] $DATA_PATH_WIDTH]
c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
set msb_3_reg_d_l [make-reg_l "d" [expr $lsb_bits + 8] $DATA_PATH_WIDTH]
d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
set msb_3_reg_a_b_joined [concat $msb_3_reg_a_l $msb_3_reg_b_l]
a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_3_reg_a_b_c_joined [concat $msb_3_reg_a_b_joined $msb_3_reg_c_l]
a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
#-----  -----    -----     -----     -----     -----
set lsb_4_reg_a_l [make-reg_l "a" 0 [expr $lsb_bits + 12]]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15]
set lsb_4_reg_b_l [make-reg_l "b" 0 [expr $lsb_bits + 12]]
b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15]
set lsb_4_reg_c_l [make-reg_l "c" 0 [expr $lsb_bits + 12]]
c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15]
set lsb_4_reg_d_l [make-reg_l "d" 0 [expr $lsb_bits + 12]]
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15]
set lsb_4_reg_a_b_joined [concat $lsb_4_reg_a_l $lsb_4_reg_b_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15]
set lsb_4_reg_a_b_c_joined [concat $lsb_4_reg_a_b_joined $lsb_4_reg_c_l]
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15]
set msb_4_reg_a_l [make-reg_l "a" [expr $lsb_bits + 12] $DATA_PATH_WIDTH]
a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set msb_4_reg_b_l [make-reg_l "b" [expr $lsb_bits + 12]  $DATA_PATH_WIDTH]
b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_4_reg_c_l [make-reg_l "c" [expr $lsb_bits + 12] $DATA_PATH_WIDTH]
c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
set msb_4_reg_d_l [make-reg_l "d" [expr $lsb_bits + 12] $DATA_PATH_WIDTH]
d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
set msb_4_reg_a_b_joined [concat $msb_4_reg_a_l $msb_4_reg_b_l]
a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set msb_4_reg_a_b_c_joined [concat $msb_4_reg_a_b_joined $msb_4_reg_c_l]
a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
#----------------------------------------------------
#----------------------------------------------------
puts "----------------------------------------------------"
----------------------------------------------------
puts "----------------------------------------------------"
----------------------------------------------------
puts "msb_1_reg_a_b_c_joined"
msb_1_reg_a_b_c_joined
puts $msb_1_reg_a_b_c_joined
a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
puts "--------------"
--------------
puts "msb_2_reg_a_b_c_joined"
msb_2_reg_a_b_c_joined
puts $msb_2_reg_a_b_c_joined
a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
puts "--------------"
--------------
puts "msb_3_reg_a_b_c_joined"
msb_3_reg_a_b_c_joined
puts $msb_3_reg_a_b_c_joined
a[12] a[13] a[14] a[15] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[12] b[13] b[14] b[15] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
puts "--------------"
--------------
puts "msb_4_reg_a_b_c_joined"
msb_4_reg_a_b_c_joined
puts $msb_4_reg_a_b_c_joined
a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
puts "-----  -----    -----     -----     -----     -----"
-----  -----    -----     -----     -----     -----
puts "lsb_1_reg_a_b_c_joined"
lsb_1_reg_a_b_c_joined
puts $lsb_1_reg_a_b_c_joined
a[0] a[1] a[2] a[3] b[0] b[1] b[2] b[3] c[0] c[1] c[2] c[3]
puts "--------------"
--------------
puts "lsb_2_reg_a_b_c_joined"
lsb_2_reg_a_b_c_joined
puts $lsb_2_reg_a_b_c_joined
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7]
puts "--------------"
--------------
puts "lsb_3_reg_a_b_c_joined"
lsb_3_reg_a_b_c_joined
puts $lsb_3_reg_a_b_c_joined
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11]
puts "--------------"
--------------
puts "lsb_4_reg_a_b_c_joined"
lsb_4_reg_a_b_c_joined
puts $lsb_4_reg_a_b_c_joined
a[0] a[1] a[2] a[3] a[4] a[5] a[6] a[7] a[8] a[9] a[10] a[11] a[12] a[13] a[14] a[15] b[0] b[1] b[2] b[3] b[4] b[5] b[6] b[7] b[8] b[9] b[10] b[11] b[12] b[13] b[14] b[15] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15]
puts "-----  -----    -----     -----     -----     -----"
-----  -----    -----     -----     -----     -----
puts "lsb_1_reg_d_l"
lsb_1_reg_d_l
puts $lsb_1_reg_d_l 
d[0] d[1] d[2] d[3]
puts "lsb_2_reg_d_l"
lsb_2_reg_d_l
puts $lsb_2_reg_d_l 
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7]
puts "lsb_3_reg_d_l"
lsb_3_reg_d_l
puts $lsb_3_reg_d_l 
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11]
puts "lsb_4_reg_d_l"
lsb_4_reg_d_l
puts $lsb_4_reg_d_l 
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15]
puts "-----  -----    -----     -----     -----     -----"
-----  -----    -----     -----     -----     -----
puts "msb_1_reg_d_l"
msb_1_reg_d_l
puts $msb_1_reg_d_l 
d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
puts "msb_2_reg_d_l"
msb_2_reg_d_l
puts $msb_2_reg_d_l 
d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
puts "msb_3_reg_d_l"
msb_3_reg_d_l
puts $msb_3_reg_d_l 
d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
puts "msb_4_reg_d_l"
msb_4_reg_d_l
puts $msb_4_reg_d_l 
d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
#---    ---      ---       ---       ---       ---
set reg_0_4__a [make-reg_l "a" 0 [expr 0 + $lsb_bits]]
a[0] a[1] a[2] a[3]
set reg_0_4__b [make-reg_l "b" 0 [expr 0 + $lsb_bits]]
b[0] b[1] b[2] b[3]
set reg_0_4__c [make-reg_l "c" 0 [expr 0 + $lsb_bits]]
c[0] c[1] c[2] c[3]
set reg_0_4__d [make-reg_l "d" 0 [expr 0 + $lsb_bits]]
d[0] d[1] d[2] d[3]
set reg_0_4__a_b_joined [concat $reg_0_4__b $reg_0_4__a]
b[0] b[1] b[2] b[3] a[0] a[1] a[2] a[3]
set reg_0_4__a_b_c_joined [concat $reg_0_4__c $reg_0_4__a_b_joined]
c[0] c[1] c[2] c[3] b[0] b[1] b[2] b[3] a[0] a[1] a[2] a[3]
set reg_4_8__a [make-reg_l "a" $lsb_bits [expr $lsb_bits+4]]
a[4] a[5] a[6] a[7]
set reg_4_8__b [make-reg_l "b" $lsb_bits [expr $lsb_bits+4]]
b[4] b[5] b[6] b[7]
set reg_4_8__c [make-reg_l "c" $lsb_bits [expr $lsb_bits+4]]
c[4] c[5] c[6] c[7]
set reg_4_8__d [make-reg_l "d" $lsb_bits [expr $lsb_bits+4]]
d[4] d[5] d[6] d[7]
set reg_4_8__a_b_joined [concat $reg_4_8__b $reg_4_8__a]
b[4] b[5] b[6] b[7] a[4] a[5] a[6] a[7]
set reg_4_8__a_b_c_joined [concat $reg_4_8__c $reg_4_8__a_b_joined]
c[4] c[5] c[6] c[7] b[4] b[5] b[6] b[7] a[4] a[5] a[6] a[7]
set reg_8_12__a [make-reg_l "a" [expr $lsb_bits+4] [expr $lsb_bits+8]] 
a[8] a[9] a[10] a[11]
set reg_8_12__b [make-reg_l "b"  [expr $lsb_bits+4] [expr $lsb_bits+8]]
b[8] b[9] b[10] b[11]
set reg_8_12__c [make-reg_l "c"  [expr $lsb_bits+4] [expr $lsb_bits+8]]
c[8] c[9] c[10] c[11]
set reg_8_12__d [make-reg_l "d"  [expr $lsb_bits+4] [expr $lsb_bits+8]]
d[8] d[9] d[10] d[11]
set reg_8_12__a_b_joined [concat $reg_8_12__b $reg_8_12__a]
b[8] b[9] b[10] b[11] a[8] a[9] a[10] a[11]
set reg_8_12__a_b_c_joined [concat $reg_8_12__c $reg_8_12__a_b_joined]
c[8] c[9] c[10] c[11] b[8] b[9] b[10] b[11] a[8] a[9] a[10] a[11]
set reg_12_16__a [make-reg_l "a"  [expr $lsb_bits+8] [expr $lsb_bits+12]]
a[12] a[13] a[14] a[15]
set reg_12_16__b [make-reg_l "b" [expr $lsb_bits+8] [expr $lsb_bits+12]]
b[12] b[13] b[14] b[15]
set reg_12_16__c [make-reg_l "c" [expr $lsb_bits+8] [expr $lsb_bits+12]]
c[12] c[13] c[14] c[15]
set reg_12_16__d [make-reg_l "d" [expr $lsb_bits+8] [expr $lsb_bits+12]]
d[12] d[13] d[14] d[15]
set reg_12_16__a_b_joined [concat $reg_12_16__b $reg_12_16__a]
b[12] b[13] b[14] b[15] a[12] a[13] a[14] a[15]
set reg_12_16__a_b_c_joined [concat $reg_12_16__c $reg_12_16__a_b_joined]
c[12] c[13] c[14] c[15] b[12] b[13] b[14] b[15] a[12] a[13] a[14] a[15]
set reg_16_32__a [make-reg_l "a"  [expr $lsb_bits+12] [expr $lsb_bits+28]]
a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set reg_16_32__b [make-reg_l "b" [expr $lsb_bits+12] [expr $lsb_bits+28]]
b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31]
set reg_16_32__c [make-reg_l "c" [expr $lsb_bits+12] [expr $lsb_bits+28]]
c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31]
set reg_16_32__d [make-reg_l "d" [expr $lsb_bits+12] [expr $lsb_bits+28]]
d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
set reg_16_32__a_b_joined [concat $reg_16_32__b $reg_16_32__a]
b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
set reg_16_32__a_b_c_joined [concat $reg_16_32__c $reg_16_32__a_b_joined]
c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
puts "-----  -----    -----     -----     -----     -----"
-----  -----    -----     -----     -----     -----
puts $reg_0_4__a_b_c_joined
c[0] c[1] c[2] c[3] b[0] b[1] b[2] b[3] a[0] a[1] a[2] a[3]
puts $reg_4_8__a_b_c_joined
c[4] c[5] c[6] c[7] b[4] b[5] b[6] b[7] a[4] a[5] a[6] a[7]
puts $reg_8_12__a_b_c_joined
c[8] c[9] c[10] c[11] b[8] b[9] b[10] b[11] a[8] a[9] a[10] a[11]
puts $reg_16_32__a_b_c_joined
c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31] b[16] b[17] b[18] b[19] b[20] b[21] b[22] b[23] b[24] b[25] b[26] b[27] b[28] b[29] b[30] b[31] a[16] a[17] a[18] a[19] a[20] a[21] a[22] a[23] a[24] a[25] a[26] a[27] a[28] a[29] a[30] a[31]
puts $all_reg_d_l
d[0] d[1] d[2] d[3] d[4] d[5] d[6] d[7] d[8] d[9] d[10] d[11] d[12] d[13] d[14] d[15] d[16] d[17] d[18] d[19] d[20] d[21] d[22] d[23] d[24] d[25] d[26] d[27] d[28] d[29] d[30] d[31]
#---    ---      ---       ---       ---       ---
puts "----------------------------------------------------"
----------------------------------------------------
puts "----------------------------------------------------"
----------------------------------------------------
set_max_delay $clk_period -from $all_reg_a_b_c_joined -to $all_reg_d_l 
1
#----------------------------------------------------
#--- F: 1. enforcing total neg-slack
#------ 2. enforcing priority
#--- N: creating multiple paths usually adds alot 
#------ to the compilation time
#---- if apx design should be optimized for:
#------- set which bits should be optimize for
if {$apx_optimal == 1} {
    #--- F: decide which bits to prioritize 
    if {$apx_optimal_mode(first) == 1} {
       set priority_array  $lsb_1_reg_a_b_c_joined 
    } elseif { $apx_optimal_mode(second) == 1} {
       set priority_array  $lsb_2_reg_a_b_c_joined 
    } elseif { $apx_optimal_mode(third) == 1} {
       set priority_array  $lsb_3_reg_a_b_c_joined 
    } elseif { $apx_optimal_mode(fourth) == 1} {
       set priority_array  $lsb_4_reg_a_b_c_joined 
    }  
    
    foreach pt $all_reg_a_b_joined { 
        puts $pt   
        if {[lsearch -exact $priority_array $pt] >= 0} {
            group_path -name lsb -from $pt -critical_range 0.5 -priority 2 -weight 2
        } else {
            group_path -name msb -from $pt -critical_range 0.5 -priority 5 -weight 5
        }
    }
} else {
    #group_path -name clk -from clk -critical_range 0.5 -priority 100 -weight 100
    group_path -name clk -from clk
}
a[0]
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a[8]
a[9]
a[10]
a[11]
a[12]
a[13]
a[14]
a[15]
a[16]
a[17]
a[18]
a[19]
a[20]
a[21]
a[22]
a[23]
a[24]
a[25]
a[26]
a[27]
a[28]
a[29]
a[30]
a[31]
b[0]
b[1]
b[2]
b[3]
b[4]
b[5]
b[6]
b[7]
b[8]
b[9]
b[10]
b[11]
b[12]
b[13]
b[14]
b[15]
b[16]
b[17]
b[18]
b[19]
b[20]
b[21]
b[22]
b[23]
b[24]
b[25]
b[26]
b[27]
b[28]
b[29]
b[30]
b[31]
#FROM HERE:
#----- TODO: need to set a variabel that activates the following statements
#----- figure out whether the number of clk gated register effect the optimal baseline
#-------- if no, don't have to change the CLKGATED_BITWIDTH
#-------- just need to activate one the followings to impose priority (only the following 
#-------- not the above if statement
if {$apx_optimal == 1} {
    if {$apx_optimal_mode(first) == 1} {
        puts "optimal first" 
        set_max_delay $msb_1_max_delay -from $msb_1_reg_a_b_c_joined -to $msb_1_reg_d_l
    }
    if {$apx_optimal_mode(second) == 1} {
        puts "optimal second" 
        set_max_delay $msb_2_max_delay -from $msb_2_reg_a_b_c_joined -to $msb_1_reg_d_l
    }
    if {$apx_optimal_mode(third) == 1} {
        set_max_delay $msb_3_max_delay -from $msb_3_reg_a_b_c_joined -to $msb_3_reg_d_l
    }
    if {$apx_optimal_mode(fourth) == 1} {
        set_max_delay $msb_4_max_delay -from $msb_4_reg_a_b_c_joined -to $msb_4_reg_d_l
    }
}
optimal first
optimal second
1
#group_path -name rst_reg_reg -from rst_reg_reg -priority 11
#set_max_delay .26 -from rst_reg_reg 
#foreach_in_collection endpt $inputpoints { set pin [get_object_name $endpt] 
#    puts "hello" 
#    puts $pin   
#    group_path -name $pin -from $pin
#}
#--- compile (symthesize  to gate level and optimize design)
#compile
#compile -map_effort high -area_effort high -power_effort high 
#compile -power_effort high
#compile_ultra
#compile_ultra -timing_high_effort_script -incremental
#set_dp_smartgen_options -carry_select_adder_cell true
compile_ultra -timing_high_effort_script 
Warning: The -timing_high_effort_script option is ignored.  (OPT-1342)
Information: Performing power optimization. (PWR-850)
Alib files are up-to-date.
Loading db file '/usr/local/packages/synopsys_2016/syn/libraries/syn/dw_foundation.sldb'
Information: Failed to find dw_foundation.sldb in the user defined search_path, load it from 'Synopsys Root'. (UISN-70)
Warning: DesignWare synthetic library dw_foundation.sldb is added to the synthetic_library in the current command. (UISN-40)
Information: Evaluating DesignWare library utilization. (UISN-27)

============================================================================
| DesignWare Building Block Library  |         Version         | Available |
============================================================================
| Basic DW Building Blocks           | L-2016.03-DWBB_201603.5.1
                                                               |     *     |
| Licensed DW Building Blocks        | L-2016.03-DWBB_201603.5.1
                                                               |     *     |
============================================================================

Information: Sequential output inversion is enabled.  SVF file must be used for formal verification. (OPT-1208)

Information: There are 2 potential problems in your design. Please run 'check_design' for more information. (LINT-99)

  Simplifying Design 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32'

Loaded alib file './alib-52/noAging.db.alib'
  Building model 'DW01_NAND2'
Information: Ungrouping 0 of 1 hierarchies before Pass 1 (OPT-775)
Information: State dependent leakage is now switched from on to off.

  Beginning Pass 1 Mapping
  ------------------------
  Processing 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32'
 Implement Synthetic for 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32'.

  Updating timing information
Information: Updating design information... (UID-85)
Information: The library cell 'LOGIC1_X1' in the library 'typical' is not characterized for internal power. (PWR-536)
Information: The library cell 'LOGIC0_X1' in the library 'typical' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)

  Beginning Mapping Optimizations  (Ultra High effort)
  -------------------------------
  Mapping Optimization (Phase 1)

  Beginning Constant Register Removal
  -----------------------------------

  Beginning Global Optimizations
  ------------------------------
  Numerical Synthesis (Phase 1)
  Numerical Synthesis (Phase 2)
  Global Optimization (Phase 1)
  Global Optimization (Phase 2)
  Global Optimization (Phase 3)
  Global Optimization (Phase 4)
  Global Optimization (Phase 5)
  Global Optimization (Phase 6)
  Global Optimization (Phase 7)
  Global Optimization (Phase 8)
  Global Optimization (Phase 9)
  Global Optimization (Phase 10)
  Global Optimization (Phase 11)
  Global Optimization (Phase 12)
  Global Optimization (Phase 13)
  Global Optimization (Phase 14)
  Global Optimization (Phase 15)
  Global Optimization (Phase 16)
  Global Optimization (Phase 17)
  Global Optimization (Phase 18)
  Global Optimization (Phase 19)
  Global Optimization (Phase 20)
  Global Optimization (Phase 21)
  Global Optimization (Phase 22)
  Global Optimization (Phase 23)
  Global Optimization (Phase 24)
  Global Optimization (Phase 25)
  Global Optimization (Phase 26)
  Global Optimization (Phase 27)
  Global Optimization (Phase 28)
  Global Optimization (Phase 29)
  Global Optimization (Phase 30)

  Beginning Isolate Ports
  -----------------------

  Beginning Delay Optimization
  ----------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:08    2451.5      0.27      29.2       0.0                             13.1867
  Mapping 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32_DP_OP_3J1_122_8867_2'
Information: Added key list 'DesignWare' to design 'conf_int_mac__noFF__arch_agnos_OP_BITWIDTH32_DATA_PATH_BITWIDTH32'. (DDB-72)
    0:00:16    2745.7      0.14      13.3       0.0                             17.3276
    0:00:16    2745.7      0.14      13.3       0.0                             17.3276
    0:00:16    2745.7      0.14      13.3       0.0                             17.3276

  Beginning WLM Backend Optimization
  --------------------------------------
    0:00:18    2709.5      0.14      12.6       0.0                             16.7892
    0:00:18    2710.0      0.14      12.6       0.0                             16.7102
    0:00:18    2710.0      0.14      12.6       0.0                             16.7102
    0:00:31    2845.7      0.14      12.3       0.0                             17.9605
    0:00:31    2845.7      0.14      12.3       0.0                             17.9605
    0:00:31    2848.9      0.13      11.4       0.0                             18.0289
    0:00:31    2848.9      0.13      11.4       0.0                             18.0289
    0:00:58    2995.2      0.12      10.7       0.0                             18.9983
    0:00:58    2995.2      0.12      10.7       0.0                             18.9983
    0:01:06    3073.6      0.10       8.8       0.0                             19.8950
    0:01:06    3073.6      0.10       8.8       0.0                             19.8950
    0:01:30    3172.3      0.11       9.5       0.0                             20.3902
    0:01:30    3172.3      0.11       9.5       0.0                             20.3902
    0:01:43    3274.5      0.07       5.9       0.0                             21.2944
    0:01:43    3274.5      0.07       5.9       0.0                             21.2944
    0:02:10    3438.3      0.07       5.9       0.0                             21.9220
    0:02:10    3438.3      0.07       5.9       0.0                             21.9220
    0:02:22    3507.5      0.06       5.1       0.0                             22.6811
    0:02:22    3507.5      0.06       5.1       0.0                             22.6811
